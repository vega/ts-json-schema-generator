name: Test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [10, 12, 14]

    name: Node ${{ matrix.node }}

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Node dependencies
        run: yarn --frozen-lockfile

      - run: yarn lint
      - run: yarn test
      - run: yarn build

      - name: Test coverage
        run: yarn jest test/ --collectCoverage=true

      - name: Upload coverage to Codecov
        run: yarn codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
